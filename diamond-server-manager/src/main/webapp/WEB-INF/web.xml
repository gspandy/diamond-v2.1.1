<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	
	<!-- log4j配置 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.root</param-value>
	</context-param>
	
	<!-- 
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	 -->
	 
	<!-- spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	


	
	<!-- ======================== 单点登录开始 ======================== -->
       <!-- 用于单点退出，该过滤器用于实现单点登出功能，可选配置-->
       <listener>
             <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
       </listener>
       <!-- 该过滤器用于实现单点登出功能，可选配置。 -->
       <filter>
             <filter-name>CAS Single Sign Out Filter</filter-name>
             <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
       </filter>
       <filter-mapping>
             <filter-name>CAS Single Sign Out Filter</filter-name>
             <url-pattern>/admin/*</url-pattern>
       </filter-mapping>
       <!-- 该过滤器负责用户的认证工作，必须启用它 -->
       <filter>
             <filter-name>CASFilter</filter-name >
             <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter </filter-class>
             <init-param>
                   <param-name>casServerLoginUrl</param-name>
                   <param-value>/login</param-value>
             </init-param>
             <init-param>
                   <param-name>serverName</param-name>
                   <param-value>/</param-value>
          </init-param>
       </filter>
       <filter-mapping>
             <filter-name>CASFilter</filter-name>
             <url-pattern>/admin/*</url-pattern>
       </filter-mapping>
       <!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
       <filter>
             <filter-name>CAS Validation Filter</filter-name>
             <filter-class>
                  org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter </filter-class>
             <init-param>
                   <param-name>casServerUrlPrefix</param-name>
                   <param-value>/</param-value>
             </init-param>
             <init-param>
                   <param-name>serverName</param-name>
                   <param-value>/</param-value>
             </init-param>
             <init-param>  
            <param-name>useSession</param-name> 
            <param-value>true</param-value> 
        </init-param>  
        <init-param>  
            <param-name>redirectAfterValidation</param-name> 
            <param-value>true</param-value> 
        </init-param>
        <init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
       </filter>
       <filter-mapping>
             <filter-name>CAS Validation Filter</filter-name>
             <url-pattern>/admin/*</url-pattern>
       </filter-mapping>

       <!--
	            该过滤器负责实现HttpServletRequest请求的包裹，
	            比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。
      -->
       <filter>
             <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
             <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
       </filter>
       <filter-mapping>
             <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
             <url-pattern>/admin/*</url-pattern>
       </filter-mapping>

       <!--
	            该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
	            比如AssertionHolder.getAssertion().getPrincipal().getName()。
      -->
       <filter>
             <filter-name>CAS Assertion Thread Local Filter</filter-name>
             <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
       </filter>
       <filter-mapping>
             <filter-name>CAS Assertion Thread Local Filter</filter-name>
             <url-pattern>/admin/*</url-pattern>
       </filter-mapping>
      
       <!-- 自动根据单点登录的结果设置本系统的用户信息 -->
      <filter>
            <display-name>AutoSetUserAdapterFilter</display-name>
            <filter-name>AutoSetUserAdapterFilter</filter-name>
            <filter-class>org.jasig.cas.client.filter.CasFilter</filter-class>
      </filter>
      <filter-mapping>
            <filter-name>AutoSetUserAdapterFilter</filter-name>
            <url-pattern>/admin/*</url-pattern>
      </filter-mapping>
     <!-- ======================== 单点登录结束 ======================== -->
     

	
	<!-- 授权过滤器 -->
	<!-- 
	<filter>
		<filter-name>authorizationFilter</filter-name>
		<filter-class>com.taobao.diamond.server.listener.AuthorizationFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>authorizationFilter</filter-name>
		<url-pattern>/jsp/admin/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>authorizationFilter</filter-name>
		<url-pattern>/*.do</url-pattern>
	</filter-mapping>
	 -->
	<!-- spring mvc -->
	<servlet>
		<servlet-name>diamond</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet>
		<servlet-name>ConfigServlet</servlet-name>
		<servlet-class>com.taobao.diamond.server.controller.ConfigServlet</servlet-class>
		<load-on-startup>-1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>diamond</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>ConfigServlet</servlet-name>
		<url-pattern>/config.co</url-pattern>
	</servlet-mapping>
	
	<error-page>
		<error-code>500</error-code>
		<location>/jsp/500.jsp</location>
	</error-page>

</web-app>